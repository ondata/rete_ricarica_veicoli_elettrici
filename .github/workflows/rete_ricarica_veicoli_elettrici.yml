name: aggiorna dati

on:
#  push:
  repository_dispatch:
  schedule:
    - cron: "5 4 * * *"
#    - cron: "3 8-11 * * *"
#    - cron: "3 11-23/2 * * *"
  workflow_dispatch:

jobs:
  scheduled:
    runs-on: ubuntu-latest
    steps:
    - name: Utilizza l'action github checkout@v2, per automatizzare il check-out
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: crea cartella utente bin, copia dentro l'eseguibile scrape e mlr
      run: |-
        mkdir -p ~/bin
        cp bin/scrape ~/bin
        cp bin/mlr ~/bin
        cp bin/mlrgo ~/bin
        cp bin/duckdb ~/bin
        cd ~/bin
        chmod +x scrape
        chmod +x mlr
        chmod +x mlrgo
        chmod +x duckdb
        pip install flatterer
        sudo apt-get install gdal-bin
    - name: Setup Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '20'
    - name: Installa Chrome
      run: npx puppeteer browsers install chrome
    - name: Imposta variabile d'ambiente per il percorso della cache di Puppeteer
      run: echo "export PUPPETEER_DOWNLOAD_PATH=/home/runner/.cache/puppeteer" >> $GITHUB_ENV
    - name: Installa dipendenze
      run: |
        npm install puppeteer
        npm install fs-extra
        npm install path
    - name: esegui lo script base
      run: |-
        export PATH=$PATH:~/bin
        cd ./script
        chmod +x ./rete_ricarica_veicoli_elettrici.sh
        ./rete_ricarica_veicoli_elettrici.sh
        chmod +x ./rete_ricarica_veicoli_elettrici_api.sh
        ./rete_ricarica_veicoli_elettrici_api.sh
    - name: Pulisci cartelle temporanee
      run: rm -rf node_modules
    - name: Committa e pusha se ci sono variazioni nei dati
      run: |-
        git config user.name "automatico"
        git config user.email "actions@users.noreply.github.com"
        git add -A
        timestamp=$(date --iso-8601=seconds)
        git commit -m "aggiornamento dati: ${timestamp}" || exit 0
        git push
